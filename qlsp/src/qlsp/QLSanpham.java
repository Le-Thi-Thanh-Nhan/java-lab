/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package qlsp;

import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class QLSanpham extends javax.swing.JFrame {

    /**
     * Creates new form QL_Products
     */
    public QLSanpham() {
        initComponents();
        ShowTable();//Hiển thị dữ liệu khi khởi động
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tfMasp = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tfTensp = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tfSoLuong = new javax.swing.JTextField();
        btLaydulieu = new javax.swing.JButton();
        btCapnhat = new javax.swing.JButton();
        btThem = new javax.swing.JButton();
        btXoa = new javax.swing.JButton();
        btThoat = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSP = new javax.swing.JTable();
        btLammoi = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btTimkiemtheoma = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        tfSoluongtimkiem = new javax.swing.JTextField();
        btTimkiem_SL = new javax.swing.JButton();
        btNext = new javax.swing.JButton();
        btNext5 = new javax.swing.JButton();
        btComeback = new javax.swing.JButton();
        btComeback5 = new javax.swing.JButton();
        tfMatimkiem = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        mnLaydulieu = new javax.swing.JMenuItem();
        mnCapnhat = new javax.swing.JMenuItem();
        mnThem = new javax.swing.JMenuItem();
        mnLammoi = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản lý sản phẩm");

        jLabel1.setText("Mã sản phẩm:");

        jLabel2.setText("Tên sản phẩm:");

        jLabel3.setText("Số lượng:");

        btLaydulieu.setText("Lấy dữ liệu");
        btLaydulieu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLaydulieuActionPerformed(evt);
            }
        });

        btCapnhat.setText("Cập nhật");
        btCapnhat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btCapnhatMouseClicked(evt);
            }
        });

        btThem.setText("Thêm");
        btThem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btThemMouseClicked(evt);
            }
        });

        btXoa.setText("Xóa");
        btXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btXoaActionPerformed(evt);
            }
        });

        btThoat.setText("Thoát");
        btThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btThoatActionPerformed(evt);
            }
        });

        tblSP.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tblSP.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        tblSP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã Sản Phẩm", "Tên Sản Phẩm", "Số Lượng"
            }
        ));
        tblSP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSPMouseClicked(evt);
            }
        });
        tblSP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblSPKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblSP);

        btLammoi.setText("Làm mới");
        btLammoi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btLammoiMouseClicked(evt);
            }
        });

        jLabel4.setText("Tìm kiếm theo mã: ");

        btTimkiemtheoma.setText("Tìm kiếm theo mã");
        btTimkiemtheoma.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btTimkiemtheomaMouseClicked(evt);
            }
        });
        btTimkiemtheoma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btTimkiemtheomaActionPerformed(evt);
            }
        });

        jLabel5.setText("Tìm kiếm theo số lượng:");

        tfSoluongtimkiem.setToolTipText("Tìm những sản phẩm có số lượng nhỏ hơn giá trị này");

        btTimkiem_SL.setText("Tìm kiếm theo số lượng");
        btTimkiem_SL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btTimkiem_SLMouseClicked(evt);
            }
        });

        btNext.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btNext.setText(">");
        btNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNextActionPerformed(evt);
            }
        });

        btNext5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btNext5.setText(">>");
        btNext5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNext5ActionPerformed(evt);
            }
        });

        btComeback.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btComeback.setText("<");
        btComeback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btComebackActionPerformed(evt);
            }
        });

        btComeback5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btComeback5.setText("<<");
        btComeback5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btComeback5MouseClicked(evt);
            }
        });

        tfMatimkiem.setToolTipText("Nhập mã tìm kiếm");

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        mnLaydulieu.setText("Lấy dữ liệu");
        mnLaydulieu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mnLaydulieuKeyPressed(evt);
            }
        });
        jMenu2.add(mnLaydulieu);

        mnCapnhat.setText("Cập nhật");
        jMenu2.add(mnCapnhat);

        mnThem.setText("Thêm");
        jMenu2.add(mnThem);

        mnLammoi.setText("Làm mới");
        mnLammoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnLammoiActionPerformed(evt);
            }
        });
        jMenu2.add(mnLammoi);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Insert");
        jMenuBar1.add(jMenu3);

        jMenu4.setText("Tools");
        jMenuBar1.add(jMenu4);

        jMenu5.setText("Windows");
        jMenuBar1.add(jMenu5);

        jMenu6.setText("Help");
        jMenuBar1.add(jMenu6);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfSoLuong)
                                    .addComponent(tfTensp)
                                    .addComponent(tfMasp, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfMatimkiem)
                                    .addComponent(tfSoluongtimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btLammoi, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btThem, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btCapnhat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btLaydulieu, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(btTimkiemtheoma, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btTimkiem_SL, javax.swing.GroupLayout.Alignment.LEADING))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btComeback)
                                .addGap(58, 58, 58)
                                .addComponent(btComeback5, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btNext5, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(87, 87, 87)
                                .addComponent(btNext))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfMasp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btLaydulieu)
                    .addComponent(btXoa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfTensp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btCapnhat)
                    .addComponent(btThoat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btThem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btLammoi)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(btTimkiemtheoma)
                    .addComponent(tfMatimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tfSoluongtimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btTimkiem_SL))
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btNext, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btNext5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btComeback, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btComeback5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
   //Đếm số dòng có trong bảng Products
    public int Dem() throws ClassNotFoundException {
        int dem = 0;
        try {
            Connect pt = new Connect();
            ResultSet rs = pt.GetData("Products");
            while (rs.next()) {
                dem++;//Đếm số dòng trong table Products
            }

            pt.Close();
        } catch (SQLException sqlException) {
            sqlException.printStackTrace();
        }
        return dem;
    }

    public void ShowTable() {
      //  Hiển thị dữ liệu lên table;
        DefaultTableModel model = (DefaultTableModel) tblSP.getModel();
         model.setRowCount(0);
         model.setRowCount(50);
        // model.setRowCount(Dem());//Thiết lập số dòng của jtable = số dòng của bảng của DataBase
        try {
            Connect pt = new Connect();
            ResultSet rs = pt.GetData("Products");
            int i = 0;
            while (rs.next()) {                
                tblSP.setValueAt(rs.getString("ID"), i, 0);
                tblSP.setValueAt(rs.getString("Name"), i, 1);
                tblSP.setValueAt(rs.getString("Number"), i, 2);
                i++;
            }
            pt.Close();
        } catch (SQLException sqlException) {
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QLSanpham.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void btLaydulieuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLaydulieuActionPerformed
        ShowTable();//Hiển thị dữ liệu từ Product sang Table tblSP
    }//GEN-LAST:event_btLaydulieuActionPerformed
    public void capnhatDL() {
        Connect pt;
        try {
            pt = new Connect();
            pt.Update(tfMasp.getText(), tfTensp.getText(), Integer.parseInt(tfSoLuong.getText()));
            pt.Close();
        } catch (SQLException sqlException) {
            sqlException.printStackTrace();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QLSanpham.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void btCapnhatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btCapnhatMouseClicked
        try {
            if (check(tfMasp.getText()) == true) {
            //txt_maSP.setEnabled(false);
                capnhatDL();
                ShowTable();
                JOptionPane.showMessageDialog(null, "Bạn đã cập nhật thành công!");
            } else {
                JOptionPane.showMessageDialog(null, "Mã sản phẩm không trùng với dữ liệu cần sửa!");
                
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QLSanpham.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btCapnhatMouseClicked
    public void Show_Detail() {
        try {
            Connect pt = new Connect();
       //     ResultSet rs = pt.GetData("Products");
            int i = tblSP.getSelectedRow();

            tfMasp.setText((String) tblSP.getValueAt(i, 0));
            tfTensp.setText((String) tblSP.getValueAt(i, 1));
            tfSoLuong.setText((String) tblSP.getValueAt(i, 2));

            pt.Close();
        } catch (SQLException sqlException) {
            sqlException.printStackTrace();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QLSanpham.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void tblSPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSPMouseClicked
       Show_Detail();      
    }//GEN-LAST:event_tblSPMouseClicked
    public void Insert() {
        String id = tfMasp.getText();
        String tenSP = tfTensp.getText();
        int soluong = Integer.parseInt(tfSoLuong.getText());
        Connect pt;
        try {
            pt = new Connect();
            pt.Insert(id, tenSP, soluong);
            pt.Close();
        } catch (SQLException sqlException) {
            sqlException.printStackTrace();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QLSanpham.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void btThemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btThemMouseClicked
        tfMasp.setEnabled(true);
        String id = tfMasp.getText();
        String tensp = tfTensp.getText();
        String soluong = tfSoLuong.getText();
        id = id.replaceAll(" ", "");
        tensp = tensp.replaceAll(" ", "");
        soluong = soluong.replaceAll(" ", "");
        if (tfMasp.getText().equals("") == true || tfTensp.equals("") == true || tfSoLuong.equals("") == true) {
            JOptionPane.showMessageDialog(null, "Bạn chưa nhập dữ liệu!");
        } else {
            try {
                if (check(id) == true) {
                    JOptionPane.showMessageDialog(null, "Mã sản phẩm bị trùng!!! Vui lòng nhập lại!!!");
                } else {
                    Insert();
                    ShowTable();
                    JOptionPane.showMessageDialog(null, "Đã thêm thành công");
                    
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(QLSanpham.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btThemMouseClicked

    private void btLammoiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btLammoiMouseClicked
        int result = JOptionPane.showConfirmDialog(null, "Bạn có muốn format lại không?", "Thông báo", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {
            tfMasp.setText("");
            tfMasp.setEnabled(true);
            tfTensp.setText("");
            tfSoLuong.setText("");
            tfSoluongtimkiem.setText("");

        } 
    }//GEN-LAST:event_btLammoiMouseClicked
    public void Delete(String id) {

        Connect pt;
        try {
            pt = new Connect();
            pt.Delete(id);
            pt.Close();
        } catch (SQLException sqlException) {
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QLSanpham.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private boolean check(String ID) throws ClassNotFoundException {
        boolean check = false;
        try {
            Connect pt = new Connect();

            ResultSet rs = pt.GetData("Products");
            while (rs.next()) {
                if (rs.getString(1).equals(ID) == true) {
                    check = true;
                }
            }
            pt.Close();
        } catch (SQLException sqlException) {
            sqlException.printStackTrace();
                }
        return check;
    }
    private void btXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btXoaActionPerformed
        String id = tfMasp.getText();
        try {
            if (check(id) == true) {
                int result = JOptionPane.showConfirmDialog(null, "Bạn có muốn xóa sản phẩm này không", "Thông báo", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (result == JOptionPane.YES_OPTION) {
                    Delete(id);
                    ShowTable();
                } else {
                }
            } else {
                JOptionPane.showMessageDialog(null, "Mã sản phẩm không trùng với mã sản phẩm trong database!!!");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QLSanpham.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btXoaActionPerformed
    public void Clear_Table() throws ClassNotFoundException {
        DefaultTableModel model = (DefaultTableModel) tblSP.getModel();
        model.setRowCount(0);
        model.setRowCount(Dem());
    }

    public void show_timkiem(String ID) throws ClassNotFoundException {
        Clear_Table();
        try {
            Connect pt = new Connect();
            ResultSet rs = pt.GetData_TK(ID);
            int i = 0;
            while (rs.next()) {
                tblSP.setValueAt(rs.getString("ID"), i, 0);
                tblSP.setValueAt(rs.getString("Name"), i, 1);
                tblSP.setValueAt(rs.getString("Number"), i, 2);
                i++;
            }
            pt.Close();
        } catch (SQLException sqlException) {
            sqlException.printStackTrace();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QLSanpham.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void btThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btThoatActionPerformed
        int result = JOptionPane.showConfirmDialog(null, "Bạn có muốn thoát chương trình không?", "Thông báo", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {
            this.setVisible(false);
            }
    }//GEN-LAST:event_btThoatActionPerformed

    private void btTimkiemtheomaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btTimkiemtheomaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btTimkiemtheomaMouseClicked
    public void tim_sLuong(int sl) throws ClassNotFoundException {
        Clear_Table();
        try {
            Connect pt = new Connect();
            ResultSet rs = pt.Getdata_Sluong(sl);
            int i = 0;
            while (rs.next()) {
                tblSP.setValueAt(rs.getString("ID"), i, 0);
                tblSP.setValueAt(rs.getString("Name"), i, 1);
                tblSP.setValueAt(rs.getString("Number"), i, 2);
                i++;
            }
            pt.Close();
        } catch (SQLException sqlException) {
            sqlException.printStackTrace();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QLSanpham.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void btTimkiem_SLMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btTimkiem_SLMouseClicked
        int soluong = Integer.parseInt(tfSoluongtimkiem.getText());
        try {
            tim_sLuong(soluong);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QLSanpham.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btTimkiem_SLMouseClicked

    private void btNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNextActionPerformed
        int i = tblSP.getSelectedRow();
        try {
            if (i >= Dem() - 1) {
                i = Dem() - 1;
                JOptionPane.showMessageDialog(null, "Đây là phần tử cuối cùng!!!");
            } else {
                i++;
                
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QLSanpham.class.getName()).log(Level.SEVERE, null, ex);
        }
        tblSP.setRowSelectionInterval(i,i);//Trả ra dòng i
        Show_Detail();
    }//GEN-LAST:event_btNextActionPerformed

    private void btNext5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNext5ActionPerformed
        int i = tblSP.getSelectedRow();
        try {
            if (i + 5 >= Dem() - 1) {
                i = Dem() - 1;
                JOptionPane.showMessageDialog(null, "Đây là phần tử cuối cùng!!!");
            } else {
                i += 5;
                
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QLSanpham.class.getName()).log(Level.SEVERE, null, ex);
        }
        tblSP.setRowSelectionInterval(i, i);
        Show_Detail();
    }//GEN-LAST:event_btNext5ActionPerformed

    private void btComebackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btComebackActionPerformed
        int i = tblSP.getSelectedRow();

        if (i < 1) {
            i = 0;
            JOptionPane.showMessageDialog(null, "Đây là phần tử đầu tiên!!!");
        } else {
            i -= 1;

        }
        tblSP.setRowSelectionInterval(i, i);
        Show_Detail();
    }//GEN-LAST:event_btComebackActionPerformed

    private void btComeback5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btComeback5MouseClicked
       int i = tblSP.getSelectedRow();
        if (i - 5 <= 0) {
            i = 0;
            JOptionPane.showMessageDialog(null, "Đây là phần tử đầu tiên!!!");
        } else {
            i -= 5;

        }
        tblSP.setRowSelectionInterval(i, i);
        Show_Detail();
    }//GEN-LAST:event_btComeback5MouseClicked

    private void btTimkiemtheomaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTimkiemtheomaActionPerformed
        String ID = tfMatimkiem.getText();
        try {
            show_timkiem(ID);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(QLSanpham.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btTimkiemtheomaActionPerformed

    private void tblSPKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblSPKeyReleased
     if(evt.getKeyCode()==KeyEvent.VK_UP||evt.getKeyCode()==KeyEvent.VK_DOWN)
        {
        tfMasp.setEditable(false);
        tfMasp.setText((String) tblSP.getValueAt(tblSP.getSelectedRow(),0));
        tfTensp.setText((String) tblSP.getValueAt(tblSP.getSelectedRow(),1));
        tfSoLuong.setText((String) tblSP.getValueAt(tblSP.getSelectedRow(),2));
        }
    
    }//GEN-LAST:event_tblSPKeyReleased

    private void mnLaydulieuKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mnLaydulieuKeyPressed
        ShowTable();
    }//GEN-LAST:event_mnLaydulieuKeyPressed

    private void mnLammoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnLammoiActionPerformed
        int result = JOptionPane.showConfirmDialog(null, "Bạn có muốn format lại không?", "Thông báo", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {
            tfMasp.setText("");
            tfMasp.setEnabled(true);
            tfTensp.setText("");
            tfSoLuong.setText("");
            tfSoluongtimkiem.setText("");
        }
    }//GEN-LAST:event_mnLammoiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QLSanpham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QLSanpham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QLSanpham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QLSanpham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QLSanpham().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCapnhat;
    private javax.swing.JButton btComeback;
    private javax.swing.JButton btComeback5;
    private javax.swing.JButton btLammoi;
    private javax.swing.JButton btLaydulieu;
    private javax.swing.JButton btNext;
    private javax.swing.JButton btNext5;
    private javax.swing.JButton btThem;
    private javax.swing.JButton btThoat;
    private javax.swing.JButton btTimkiem_SL;
    private javax.swing.JButton btTimkiemtheoma;
    private javax.swing.JButton btXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem mnCapnhat;
    private javax.swing.JMenuItem mnLammoi;
    private javax.swing.JMenuItem mnLaydulieu;
    private javax.swing.JMenuItem mnThem;
    private javax.swing.JTable tblSP;
    private javax.swing.JTextField tfMasp;
    private javax.swing.JTextField tfMatimkiem;
    private javax.swing.JTextField tfSoLuong;
    private javax.swing.JTextField tfSoluongtimkiem;
    private javax.swing.JTextField tfTensp;
    // End of variables declaration//GEN-END:variables
}
